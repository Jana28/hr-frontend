[{"C:\\Users\\user\\library-frontend\\src\\index.js":"1","C:\\Users\\user\\library-frontend\\src\\App.js":"2","C:\\Users\\user\\library-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\library-frontend\\src\\reducers\\authReducer.js":"4","C:\\Users\\user\\library-frontend\\src\\actions\\logoutAction.js":"5","C:\\Users\\user\\library-frontend\\src\\actions\\loginAction.js":"6","C:\\Users\\user\\library-frontend\\src\\routes\\index.js":"7","C:\\Users\\user\\library-frontend\\src\\routes\\Route.js":"8","C:\\Users\\user\\library-frontend\\src\\pages\\Home.js":"9","C:\\Users\\user\\library-frontend\\src\\pages\\Login.js":"10","C:\\Users\\user\\library-frontend\\src\\pages\\AdminRegister.js":"11","C:\\Users\\user\\library-frontend\\src\\pages\\AdminApprove.js":"12","C:\\Users\\user\\library-frontend\\src\\pages\\Register.js":"13","C:\\Users\\user\\library-frontend\\src\\pages\\AdminAuthors.js":"14","C:\\Users\\user\\library-frontend\\src\\pages\\AdminCategories.js":"15","C:\\Users\\user\\library-frontend\\src\\pages\\AdminLanguages.js":"16","C:\\Users\\user\\library-frontend\\src\\pages\\PageNotFound.js":"17","C:\\Users\\user\\library-frontend\\src\\pages\\Profile.js":"18","C:\\Users\\user\\library-frontend\\src\\pages\\AdminBooks.js":"19","C:\\Users\\user\\library-frontend\\src\\pages\\AdminSeries.js":"20","C:\\Users\\user\\library-frontend\\src\\pages\\payment\\Checkout.js":"21","C:\\Users\\user\\library-frontend\\src\\pages\\AdminPublishers.js":"22","C:\\Users\\user\\library-frontend\\src\\actions\\booksAction.js":"23","C:\\Users\\user\\library-frontend\\src\\actions\\registerAction.js":"24","C:\\Users\\user\\library-frontend\\src\\actions\\categoriesAction.js":"25","C:\\Users\\user\\library-frontend\\src\\actions\\authorsAction.js":"26","C:\\Users\\user\\library-frontend\\src\\actions\\seriesAction.js":"27","C:\\Users\\user\\library-frontend\\src\\actions\\bookClientsAction.js":"28","C:\\Users\\user\\library-frontend\\src\\actions\\publishersAction.js":"29","C:\\Users\\user\\library-frontend\\src\\actions\\languagesAction.js":"30","C:\\Users\\user\\library-frontend\\src\\components\\DownloadsDetails.js":"31","C:\\Users\\user\\library-frontend\\src\\components\\BookItem.js":"32","C:\\Users\\user\\library-frontend\\src\\components\\Page.js":"33","C:\\Users\\user\\library-frontend\\src\\components\\modals\\EditProfileModal.js":"34","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateSerieModal.js":"35","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateAuthorModal.js":"36","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateCategoryModal.js":"37","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateBookModal.js":"38","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreatePublisherModal.js":"39","C:\\Users\\user\\library-frontend\\src\\pages\\payment\\Review.js":"40","C:\\Users\\user\\library-frontend\\src\\pages\\payment\\PaymentForm.js":"41","C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateLanguageModal.js":"42","C:\\Users\\user\\library-frontend\\src\\components\\modals\\BookDetailsDialog.js":"43","C:\\Users\\user\\library-frontend\\src\\components\\NavBar.js":"44","C:\\Users\\user\\library-frontend\\src\\actions\\clientAction.js":"45","C:\\Users\\user\\library-frontend\\src\\components\\forms\\SerieForm.js":"46","C:\\Users\\user\\library-frontend\\src\\components\\forms\\BookForm.js":"47","C:\\Users\\user\\library-frontend\\src\\components\\forms\\AuthorForm.js":"48","C:\\Users\\user\\library-frontend\\src\\components\\forms\\ClientForm.js":"49","C:\\Users\\user\\library-frontend\\src\\components\\forms\\CategoryForm.js":"50","C:\\Users\\user\\library-frontend\\src\\components\\forms\\PublisherForm.js":"51","C:\\Users\\user\\library-frontend\\src\\components\\forms\\LanguageForm.js":"52","C:\\Users\\user\\library-frontend\\src\\utils\\tableIcons.tsx":"53","C:\\Users\\user\\hr-frontend\\src\\index.js":"54","C:\\Users\\user\\hr-frontend\\src\\reportWebVitals.js":"55","C:\\Users\\user\\hr-frontend\\src\\App.js":"56","C:\\Users\\user\\hr-frontend\\src\\reducers\\authReducer.js":"57","C:\\Users\\user\\hr-frontend\\src\\actions\\logoutAction.js":"58","C:\\Users\\user\\hr-frontend\\src\\actions\\loginAction.js":"59","C:\\Users\\user\\hr-frontend\\src\\routes\\index.js":"60","C:\\Users\\user\\hr-frontend\\src\\routes\\Route.js":"61","C:\\Users\\user\\hr-frontend\\src\\pages\\Home.js":"62","C:\\Users\\user\\hr-frontend\\src\\pages\\Login.js":"63","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageEmployeeHolidays.js":"64","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageHolidays.js":"65","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageEmployees.js":"66","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageLeaves.js":"67","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageDepartments.js":"68","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageWorkreasons.js":"69","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageJobs.js":"70","C:\\Users\\user\\hr-frontend\\src\\pages\\NotFoundPage.js":"71","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageAdmins.js":"72","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageLeavereasons.js":"73","C:\\Users\\user\\hr-frontend\\src\\pages\\UnauthorizedPage.js":"74","C:\\Users\\user\\hr-frontend\\src\\actions\\employeeHolidaysAction.js":"75","C:\\Users\\user\\hr-frontend\\src\\actions\\workreasonsAction.js":"76","C:\\Users\\user\\hr-frontend\\src\\actions\\holidaysAction.js":"77","C:\\Users\\user\\hr-frontend\\src\\actions\\employeesAction.js":"78","C:\\Users\\user\\hr-frontend\\src\\actions\\jobsAction.js":"79","C:\\Users\\user\\hr-frontend\\src\\actions\\departmentsAction.js":"80","C:\\Users\\user\\hr-frontend\\src\\actions\\leavereasonsAction.js":"81","C:\\Users\\user\\hr-frontend\\src\\actions\\adminsAction.js":"82","C:\\Users\\user\\hr-frontend\\src\\components\\Page.js":"83","C:\\Users\\user\\hr-frontend\\src\\components\\EmployeeHolidaysCalender.js":"84","C:\\Users\\user\\hr-frontend\\src\\components\\LeavesCalender.js":"85","C:\\Users\\user\\hr-frontend\\src\\utils\\tableIcons.js":"86","C:\\Users\\user\\hr-frontend\\src\\components\\modals\\CreateAdminBox.js":"87","C:\\Users\\user\\hr-frontend\\src\\components\\modals\\CreateEmployeeBox.js":"88","C:\\Users\\user\\hr-frontend\\src\\components\\modals\\ErrorDialog.js":"89","C:\\Users\\user\\hr-frontend\\src\\pages\\Profile\\index.js":"90","C:\\Users\\user\\hr-frontend\\src\\actions\\leavesAction.js":"91","C:\\Users\\user\\hr-frontend\\src\\components\\Drawer.js":"92","C:\\Users\\user\\hr-frontend\\src\\components\\forms\\EmployeeForm.js":"93","C:\\Users\\user\\hr-frontend\\src\\components\\forms\\AdminForm.js":"94","C:\\Users\\user\\hr-frontend\\src\\pages\\Profile\\UpdateEmployeeProfileForm.js":"95"},{"size":1610,"mtime":1609934908996,"results":"96","hashOfConfig":"97"},{"size":679,"mtime":1609934916810,"results":"98","hashOfConfig":"97"},{"size":362,"mtime":1609925573555,"results":"99","hashOfConfig":"97"},{"size":1214,"mtime":1609923998342,"results":"100","hashOfConfig":"97"},{"size":474,"mtime":1609933482715,"results":"101","hashOfConfig":"97"},{"size":1625,"mtime":1609933470063,"results":"102","hashOfConfig":"97"},{"size":2813,"mtime":1609924018210,"results":"103","hashOfConfig":"97"},{"size":971,"mtime":1609924038686,"results":"104","hashOfConfig":"97"},{"size":962,"mtime":1609925615175,"results":"105","hashOfConfig":"97"},{"size":3878,"mtime":1609923357878,"results":"106","hashOfConfig":"97"},{"size":5113,"mtime":1609923428145,"results":"107","hashOfConfig":"97"},{"size":3098,"mtime":1609923890186,"results":"108","hashOfConfig":"97"},{"size":5661,"mtime":1609925059061,"results":"109","hashOfConfig":"97"},{"size":4926,"mtime":1609933090618,"results":"110","hashOfConfig":"97"},{"size":2956,"mtime":1609923632254,"results":"111","hashOfConfig":"97"},{"size":2941,"mtime":1609923822055,"results":"112","hashOfConfig":"97"},{"size":160,"mtime":1609923326848,"results":"113","hashOfConfig":"97"},{"size":3069,"mtime":1609925053741,"results":"114","hashOfConfig":"97"},{"size":16352,"mtime":1609933100539,"results":"115","hashOfConfig":"97"},{"size":2803,"mtime":1609923417456,"results":"116","hashOfConfig":"97"},{"size":5297,"mtime":1609924066838,"results":"117","hashOfConfig":"97"},{"size":2987,"mtime":1609925283797,"results":"118","hashOfConfig":"97"},{"size":2681,"mtime":1609933342893,"results":"119","hashOfConfig":"97"},{"size":2112,"mtime":1609933562489,"results":"120","hashOfConfig":"97"},{"size":885,"mtime":1609933380591,"results":"121","hashOfConfig":"97"},{"size":1106,"mtime":1609933245881,"results":"122","hashOfConfig":"97"},{"size":807,"mtime":1609933598316,"results":"123","hashOfConfig":"97"},{"size":1749,"mtime":1609933298268,"results":"124","hashOfConfig":"97"},{"size":859,"mtime":1609933515523,"results":"125","hashOfConfig":"97"},{"size":883,"mtime":1609933442492,"results":"126","hashOfConfig":"97"},{"size":1283,"mtime":1609924431990,"results":"127","hashOfConfig":"97"},{"size":5851,"mtime":1609933080451,"results":"128","hashOfConfig":"97"},{"size":194,"mtime":1609924150784,"results":"129","hashOfConfig":"97"},{"size":2501,"mtime":1609929371084,"results":"130","hashOfConfig":"97"},{"size":2413,"mtime":1609929369251,"results":"131","hashOfConfig":"97"},{"size":2473,"mtime":1609929358039,"results":"132","hashOfConfig":"97"},{"size":2455,"mtime":1609929363309,"results":"133","hashOfConfig":"97"},{"size":3158,"mtime":1609929360575,"results":"134","hashOfConfig":"97"},{"size":2465,"mtime":1609929367413,"results":"135","hashOfConfig":"97"},{"size":1876,"mtime":1609923930902,"results":"136","hashOfConfig":"97"},{"size":2154,"mtime":1609923947719,"results":"137","hashOfConfig":"97"},{"size":2452,"mtime":1609929365315,"results":"138","hashOfConfig":"97"},{"size":2880,"mtime":1609924735710,"results":"139","hashOfConfig":"97"},{"size":3636,"mtime":1609924178110,"results":"140","hashOfConfig":"97"},{"size":415,"mtime":1609933403148,"results":"141","hashOfConfig":"97"},{"size":806,"mtime":1609928968836,"results":"142","hashOfConfig":"97"},{"size":7122,"mtime":1609929233955,"results":"143","hashOfConfig":"97"},{"size":2187,"mtime":1609928981195,"results":"144","hashOfConfig":"97"},{"size":1188,"mtime":1609928974574,"results":"145","hashOfConfig":"97"},{"size":814,"mtime":1609928976980,"results":"146","hashOfConfig":"97"},{"size":814,"mtime":1609928971011,"results":"147","hashOfConfig":"97"},{"size":812,"mtime":1609928972797,"results":"148","hashOfConfig":"97"},{"size":3690,"mtime":1607087240318,"results":"149","hashOfConfig":"97"},{"size":1735,"mtime":1609948616872,"results":"150","hashOfConfig":"151"},{"size":362,"mtime":1609925573555,"results":"152","hashOfConfig":"151"},{"size":761,"mtime":1609961063577,"results":"153","hashOfConfig":"151"},{"size":1210,"mtime":1609949444546,"results":"154","hashOfConfig":"151"},{"size":426,"mtime":1609945724392,"results":"155","hashOfConfig":"151"},{"size":5575,"mtime":1609950066091,"results":"156","hashOfConfig":"151"},{"size":2897,"mtime":1609949071853,"results":"157","hashOfConfig":"151"},{"size":896,"mtime":1609949456691,"results":"158","hashOfConfig":"151"},{"size":770,"mtime":1609945171491,"results":"159","hashOfConfig":"151"},{"size":3319,"mtime":1609949432939,"results":"160","hashOfConfig":"151"},{"size":7649,"mtime":1609948939401,"results":"161","hashOfConfig":"151"},{"size":3927,"mtime":1609948950336,"results":"162","hashOfConfig":"151"},{"size":14883,"mtime":1609950599647,"results":"163","hashOfConfig":"151"},{"size":6884,"mtime":1609948969616,"results":"164","hashOfConfig":"151"},{"size":2973,"mtime":1609948932364,"results":"165","hashOfConfig":"151"},{"size":3024,"mtime":1609948883503,"results":"166","hashOfConfig":"151"},{"size":2686,"mtime":1609948956143,"results":"167","hashOfConfig":"151"},{"size":154,"mtime":1609948409387,"results":"168","hashOfConfig":"151"},{"size":6182,"mtime":1609961001398,"results":"169","hashOfConfig":"151"},{"size":3069,"mtime":1609948962160,"results":"170","hashOfConfig":"151"},{"size":164,"mtime":1609946779266,"results":"171","hashOfConfig":"151"},{"size":1016,"mtime":1609945783610,"results":"172","hashOfConfig":"151"},{"size":767,"mtime":1609945740580,"results":"173","hashOfConfig":"151"},{"size":1006,"mtime":1609945772258,"results":"174","hashOfConfig":"151"},{"size":5419,"mtime":1609948906027,"results":"175","hashOfConfig":"151"},{"size":621,"mtime":1609945764698,"results":"176","hashOfConfig":"151"},{"size":712,"mtime":1609945789745,"results":"177","hashOfConfig":"151"},{"size":782,"mtime":1609945759898,"results":"178","hashOfConfig":"151"},{"size":2997,"mtime":1609959278919,"results":"179","hashOfConfig":"151"},{"size":525,"mtime":1609946160797,"results":"180","hashOfConfig":"151"},{"size":3336,"mtime":1609949298528,"results":"181","hashOfConfig":"151"},{"size":1690,"mtime":1609949287146,"results":"182","hashOfConfig":"151"},{"size":3690,"mtime":1609945283174,"results":"183","hashOfConfig":"151"},{"size":2849,"mtime":1609947784108,"results":"184","hashOfConfig":"151"},{"size":3248,"mtime":1609950222842,"results":"185","hashOfConfig":"151"},{"size":1175,"mtime":1609949240888,"results":"186","hashOfConfig":"151"},{"size":7516,"mtime":1609947960755,"results":"187","hashOfConfig":"151"},{"size":1084,"mtime":1609945755110,"results":"188","hashOfConfig":"151"},{"size":8488,"mtime":1609949419138,"results":"189","hashOfConfig":"151"},{"size":9490,"mtime":1609947706982,"results":"190","hashOfConfig":"151"},{"size":4720,"mtime":1609947712761,"results":"191","hashOfConfig":"151"},{"size":3727,"mtime":1609949338623,"results":"192","hashOfConfig":"151"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},"1nlk4sb",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"195"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"195"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"195"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"195"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"195"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"306"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},"16hztz1",{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"309"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"309"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"309"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"309"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"309"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"309"},"C:\\Users\\user\\library-frontend\\src\\index.js",[],["399","400"],"C:\\Users\\user\\library-frontend\\src\\App.js",[],"C:\\Users\\user\\library-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\library-frontend\\src\\reducers\\authReducer.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\logoutAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\loginAction.js",[],"C:\\Users\\user\\library-frontend\\src\\routes\\index.js",[],"C:\\Users\\user\\library-frontend\\src\\routes\\Route.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\Home.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\Login.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminRegister.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminApprove.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\Register.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminAuthors.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminCategories.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminLanguages.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\PageNotFound.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\Profile.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminBooks.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminSeries.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\payment\\Checkout.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\AdminPublishers.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\booksAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\registerAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\categoriesAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\authorsAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\seriesAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\bookClientsAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\publishersAction.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\languagesAction.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\DownloadsDetails.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\BookItem.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\Page.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\EditProfileModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateSerieModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateAuthorModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateCategoryModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateBookModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreatePublisherModal.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\payment\\Review.js",[],"C:\\Users\\user\\library-frontend\\src\\pages\\payment\\PaymentForm.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\CreateLanguageModal.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\modals\\BookDetailsDialog.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\NavBar.js",[],"C:\\Users\\user\\library-frontend\\src\\actions\\clientAction.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\forms\\SerieForm.js",["401"],"import React, { memo, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst SerieForm = memo((props) => {\r\n  const { state, setState } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"name\"\r\n                name=\"name\"\r\n                defaultValue={state.name}\r\n                title=\"name\"\r\n                label=\"name\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SerieForm;","C:\\Users\\user\\library-frontend\\src\\components\\forms\\BookForm.js",[],["402","403"],"C:\\Users\\user\\library-frontend\\src\\components\\forms\\AuthorForm.js",[],"C:\\Users\\user\\library-frontend\\src\\components\\forms\\ClientForm.js",["404"],"import React, { memo, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst ClientForm = memo((props) => {\r\n  const { state, setState } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"name\"\r\n                name=\"name\"\r\n                defaultValue={state.name}\r\n                title=\"name\"\r\n                label=\"Name\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"phoneNumber\"\r\n                name=\"phoneNumber\"\r\n                defaultValue={state.phoneNumber}\r\n                title=\"phoneNumber\"\r\n                label=\"Phone Number\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ClientForm;","C:\\Users\\user\\library-frontend\\src\\components\\forms\\CategoryForm.js",["405"],"import React, { memo, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst CategoryForm = memo((props) => {\r\n  const { state, setState } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.id]: event.target.value });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"name\"\r\n                name=\"name\"\r\n                defaultValue={state.name}\r\n                title=\"name\"\r\n                label=\"name\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CategoryForm;","C:\\Users\\user\\library-frontend\\src\\components\\forms\\PublisherForm.js",["406"],"import React, { memo, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst PublisherForm = memo((props) => {\r\n  const { state, setState } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"name\"\r\n                name=\"name\"\r\n                defaultValue={state.name}\r\n                title=\"name\"\r\n                label=\"name\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PublisherForm;","C:\\Users\\user\\library-frontend\\src\\components\\forms\\LanguageForm.js",["407"],"import React, { memo, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst LanguageForm = memo((props) => {\r\n  const { state, setState } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.id]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n                required\r\n                id=\"name\"\r\n                name=\"name\"\r\n                defaultValue={state.name}\r\n                title=\"name\"\r\n                label=\"name\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n            />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LanguageForm;","C:\\Users\\user\\library-frontend\\src\\utils\\tableIcons.tsx",[],["408","409"],"C:\\Users\\user\\hr-frontend\\src\\index.js",[],["410","411"],"C:\\Users\\user\\hr-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\hr-frontend\\src\\App.js",[],"C:\\Users\\user\\hr-frontend\\src\\reducers\\authReducer.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\logoutAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\loginAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\routes\\index.js",[],"C:\\Users\\user\\hr-frontend\\src\\routes\\Route.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\Home.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\Login.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageEmployeeHolidays.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageHolidays.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageEmployees.js",["412"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\n\r\nimport CreateemployeeBox from \"../components/modals/CreateEmployeeBox\";\r\nimport { getEmployees, setError, updateEmployee } from \"../actions/employeesAction\";\r\nimport { AddBox } from \"@material-ui/icons\";\r\nimport {tableIcons} from \"../utils/tableIcons\"\r\nimport { Avatar, Divider, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\r\nimport Page from \"../components/Page\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete/Autocomplete\";\r\nimport { getJobs } from \"../actions/jobsAction\";\r\nimport { getDepartments } from \"../actions/departmentsAction\";\r\nimport {EmployeeHolidaysCalender} from \"../components/EmployeeHolidaysCalender\";\r\nimport {LeavesCalender} from \"../components/LeavesCalender\";\r\nimport ErrorDialog from \"../components/modals/ErrorDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    width: 140\r\n  },\r\n});\r\n\r\nconst ManageEmployees = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {isLoading, errors: errors_res} = useSelector((state) => state.auth);\r\n  const [isErrorDialogOpen, setIsErrorDialogOpen] = useState(false);\r\n  const [employeeRows, setEmployeeRows] = useState([]);\r\n  const [createEmployeeOpen, setCreateEmployeeOpen] = useState(false);\r\n  const [jobs, setJobs] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [uploadedImageError, setUploadedImageError] = useState(\"\");\r\n\r\n  let isResignedToUpdate = null;\r\n  let departmentToUpdate;\r\n  let jobToUpdate;\r\n  let imageToUpdate = null;\r\n\r\n  function setIsResignedToUpdate(v) {\r\n    isResignedToUpdate = v;\r\n  }\r\n  function setJobToUpdate(v) {\r\n    jobToUpdate = v;\r\n  }\r\n  function setDepartmentToUpdate(v) {\r\n    departmentToUpdate = v;\r\n  }\r\n  function setImageToUpdate(v) {\r\n    imageToUpdate = v;\r\n  }\r\n\r\n  async function initJobs() {\r\n    getJobs()\r\n      .then((jobsRes) => {\r\n        setJobs(jobsRes);\r\n      });\r\n  }\r\n  async function initDepartments() {\r\n    getDepartments()\r\n      .then((departmentsRes) => {\r\n        setDepartments(departmentsRes);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    initJobs();\r\n    initDepartments();\r\n  }, [isLoading]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"errors_res\", errors_res);\r\n    if (errors_res.length > 0) {\r\n      setIsErrorDialogOpen(true);\r\n    }\r\n  }, [errors_res]);\r\n\r\n  function handleUploadFile(e) {\r\n    const uploadedFile = e.target.files[0];\r\n\r\n    const { type, size } = uploadedFile;\r\n    const fileExtension = type.split(\"/\").pop();\r\n    let flag = true;\r\n    switch (fileExtension) {\r\n        case \"png\":\r\n        case \"jpeg\":\r\n        case \"jpg\":\r\n        if (size > 20 * 1000 * 1000) {\r\n            setUploadedImageError(\r\n            \"the file size of type image should be maximum of 20MB\"\r\n            );\r\n            flag = false;\r\n            e.target.value = null;\r\n        }\r\n        break;\r\n        default:\r\n            setUploadedImageError(\r\n                \"file type should be image(png/jpg/jpeg)\"\r\n            );\r\n            flag = false;\r\n            e.target.value = null;\r\n    }\r\n    if (uploadedFile && flag) {\r\n        setUploadedImageError(\"\");\r\n        setImageToUpdate(uploadedFile);\r\n    }\r\n  }\r\n\t// employeeHolidays: Array<IEmployeeHoliday>;\r\n\t// leaves: Array<ILeave>;\r\n  const columns = [\r\n    {\r\n      title: \"FirstName\",\r\n      field: \"firstName\",\r\n      editable: \"onUpdate\",\r\n      validate: (rowData) =>\r\n        (rowData.firstName && rowData.firstName.length > 1) ||\r\n        \"firstName should be be at least 2 characters\",\r\n    },\r\n    {\r\n      title: \"LastName\",\r\n      field: \"lastName\",\r\n      editable: \"onUpdate\",\r\n      validate: (rowData) =>\r\n        (rowData.lastName && rowData.lastName.length > 1) ||\r\n        \"lastName should be be at least 2 characters\",\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      field: \"image\",\r\n      render: (rowData) => (\r\n        <Avatar\r\n          className={classes.media}\r\n          alt={rowData.firstName}\r\n          src={`${process.env.REACT_APP_BACKEND_BASEURL}images/${rowData.imageName}`}\r\n          aria-label=\"recipe\"\r\n        />\r\n      ),\r\n      editComponent: ({value}) => {\r\n        return (\r\n          <>\r\n            <input\r\n              id=\"upload-image-file\"\r\n              name=\"upload-image-file\"\r\n              type=\"file\"\r\n              onChange={(e) => handleUploadFile(e)}\r\n            />\r\n            <Typography color=\"error\">{uploadedImageError}</Typography>\r\n          </>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n      editable: \"never\",\r\n    },\r\n    {\r\n      title: \"Phone Number\",\r\n      field: \"phoneNumber\",\r\n      editable: \"onUpdate\",\r\n      validate: (rowData) =>\r\n        (rowData.phoneNumber && rowData.phoneNumber.length > 1) ||\r\n        \"phoneNumber should be be at least 2 characters\",\r\n    },\r\n    {\r\n      title: \"Hire Date\",\r\n      field: \"hireDate\",\r\n      editable: \"onUpdate\",\r\n      type: 'datetime',\r\n      validate: (rowData) => {\r\n        if (rowData.resignationDate) {\r\n          const hireDate = new Date(rowData.hireDate);\r\n          const resignationDate = new Date(rowData.resignationDate);\r\n          return (\r\n            resignationDate.getTime() > hireDate.getTime() ||\r\n            \"Hire date should be larger than current resignation date\"\r\n          );\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n    {\r\n      title: \"Resignation Date\",\r\n      field: \"resignationDate\",\r\n      editable: \"onUpdate\",\r\n      type: 'datetime',\r\n      validate: (rowData) => {\r\n        if (rowData.resignationDate) {\r\n          const hireDate = new Date(rowData.hireDate);\r\n          const resignationDate = new Date(rowData.resignationDate);\r\n          if(!(resignationDate.getTime() > hireDate.getTime()))\r\n            return (\r\n              resignationDate.getTime() > hireDate.getTime() ||\r\n              \"Resignation date  should be larger than current hire date\"\r\n            );\r\n        }\r\n        if(isResignedToUpdate !== null){\r\n          if((isResignedToUpdate && rowData.resignationDate === null) || (!isResignedToUpdate && rowData.resignationDate !== null))\r\n            return (\r\n              \"if employee is resigned resignation date should not be null\"\r\n            );\r\n        } else {\r\n          if((rowData.isResigned && rowData.resignationDate === null) || (!rowData.isResigned && rowData.resignationDate !== null))\r\n            return (\r\n              \"if employee is resigned resignation date should not be null\"\r\n            );\r\n        }\r\n        return true;\r\n      },\r\n    },\r\n    {\r\n      title: \"Salary\",\r\n      field: \"salary\",\r\n      editable: \"onUpdate\",\r\n      type: 'numeric',\r\n      validate: (rowData) =>\r\n        (rowData.salary <= 1000000 && rowData.salary >= 0) ||\r\n        \"Salary should be positive & less than or equal to 1,000,000\"\r\n    },\r\n    {\r\n      title: \"Commission\",\r\n      field: \"commission\",\r\n      editable: \"onUpdate\",\r\n      type: 'numeric',\r\n      validate: (rowData) =>\r\n        (rowData.commission <= 1000000 && rowData.commission >= 0) ||\r\n        \"Commission should be positive & less than or equal to 1,000,000\"\r\n    },\r\n    {\r\n      title: \"Resigned\",\r\n      field: \"isResigned\",\r\n      editable: \"onUpdate\",\r\n      render: (rowData) => (\r\n        rowData.isResigned ? \"True\" : \"False\"\r\n      ),\r\n      editComponent: ({value}) => {\r\n        return (\r\n          <Autocomplete\r\n            id=\"checkboxes-isResigned\"\r\n            options={[{id:1, name: \"True\", value: true},{id: 0, name: \"False\", value: false}]}\r\n            defaultValue={value ? {id:1, name: \"True\", value: true} : {id: 0, name: \"False\", value: false}}\r\n            onChange={(e, v) => {\r\n              setIsResignedToUpdate(v?.value)\r\n            }}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.id === value.id}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"isResigned\" />\r\n            )}\r\n          />\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: \"Job\",\r\n      field: \"job\",\r\n      editable: \"onUpdate\",\r\n      render: (rowData) => (\r\n        <span>{rowData.job.name}</span>\r\n      ),\r\n      editComponent: ({value}) => {\r\n        return (\r\n        <Autocomplete\r\n          id=\"checkboxes-job\"\r\n          options={jobs}\r\n          defaultValue={value}\r\n          onChange={(e, v) => {\r\n            setJobToUpdate(v)\r\n          }}\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionSelected={(option, value) => option.id === value.id}\r\n          style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} variant=\"outlined\" label=\"job\" />\r\n          )}\r\n        />\r\n      )},\r\n    },\r\n    {\r\n      title: \"Department\",\r\n      field: \"department\",\r\n      editable: \"onUpdate\",\r\n      render: (rowData) => (\r\n        <span>{rowData.department.name}</span>\r\n      ),\r\n      editComponent: ({value}) => {\r\n        return (\r\n        <Autocomplete\r\n          id=\"checkboxes-department\"\r\n          options={departments}\r\n          defaultValue={value}\r\n          onChange={(e, v) => {\r\n            setDepartmentToUpdate(v)\r\n          }}\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionSelected={(option, value) => option.id === value.id}\r\n          style={{ width: 300 }}\r\n          renderInput={(params) => (\r\n            <TextField {...params} variant=\"outlined\" label=\"department\" />\r\n          )}\r\n        />\r\n      )},\r\n    },\r\n  ];\r\n\r\n  async function initEmployees() {\r\n    getEmployees()\r\n      .then((employees) => {\r\n        console.log(\"employees\", employees);\r\n          const rows = employees\r\n            ? employees.map((employee) => {\r\n                return {\r\n                  id: employee.id,\r\n                  firstName: employee.firstName,\r\n                  lastName: employee.lastName,\r\n                  email: employee.email,\r\n                  imageName: employee.imageName,\r\n                  phoneNumber: employee.phoneNumber,\r\n                  hireDate: employee.hireDate,\r\n                  salary: employee.salary,\r\n                  commission: employee.commission,\r\n                  isResigned: employee.isResigned,\r\n                  resignationDate: employee.resignationDate,\r\n                  job: employee.job,\r\n                  department: employee.department,\r\n                  employeeHolidays: employee.employeeHolidays,\r\n                  leaves: employee.leaves,\r\n                };\r\n                })\r\n            : [];\r\n          setEmployeeRows(rows);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    initEmployees();\r\n  }, [isLoading]);\r\n\r\n  const handleCreateEmployeeOpen = () => {\r\n    setCreateEmployeeOpen(true);\r\n  };\r\n\r\n  const handleCreateEmployeeClose = () => {\r\n    setCreateEmployeeOpen(false);\r\n  };\r\n\r\n  const handleUpdateEmployee = async (newData) => {\r\n    console.log(\"newData\", newData);\r\n    console.log(\"isResignedToUpdate\", isResignedToUpdate);\r\n    if(isResignedToUpdate !== null){\r\n      if((isResignedToUpdate && newData.resignationDate === null) || (!isResignedToUpdate && newData.resignationDate !== null)){\r\n        alert(\"if employee is resigned resignation date should not be null\")\r\n        return ;\r\n      }\r\n    } else {\r\n      if((newData.isResigned && newData.resignationDate === null) || (!newData.isResigned && newData.resignationDate !== null)){\r\n        alert(\"if employee is resigned resignation date should not be null\")\r\n        return ;\r\n      }\r\n    }\r\n    const updateEmployeePayload = {\r\n        id: newData.id,\r\n        firstName: newData.firstName,\r\n        lastName: newData.lastName,\r\n        image: imageToUpdate,\r\n        phoneNumber: newData.phoneNumber,\r\n        hireDate: newData.hireDate,\r\n        salary: newData.salary,\r\n        commission: newData.commission,\r\n        isResigned: isResignedToUpdate !== null ? isResignedToUpdate : newData.isResigned,\r\n        resignationDate: newData.resignationDate,\r\n        job_id: jobToUpdate ? jobToUpdate.id : newData.job.id,\r\n        department_id: departmentToUpdate ? departmentToUpdate.id : newData.department.id,\r\n    };\r\n\r\n    dispatch(updateEmployee({employee: updateEmployeePayload, initEmployees}));\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      {!createEmployeeOpen && (\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"Manage employees\"\r\n          columns={columns}\r\n          data={employeeRows}\r\n          actions={\r\n            [\r\n              {\r\n                icon: () => <AddBox />,\r\n                tooltip: \"add new employee\",\r\n                position: \"toolbar\",\r\n                onClick: () => {\r\n                  handleCreateEmployeeOpen();\r\n                },\r\n              },\r\n            ]\r\n          }\r\n          editable={{\r\n            onRowUpdate: (newData) => handleUpdateEmployee(newData),\r\n          }}\r\n          options={{\r\n            search: false,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            pageSizeOptions: [20, 50],\r\n            paging: false,\r\n            maxBodyHeight: \"70vh\",\r\n            minBodyHeight: \"70vh\",\r\n          }}\r\n          detailPanel={(rowData) => {\r\n            return (\r\n              <>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Grid>\r\n                    <Typography variant=\"h5\">This selected employee has below leaves:</Typography>\r\n                    <Divider/>\r\n                    <LeavesCalender isMultiple={false} leaves={rowData.leaves} />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Typography variant=\"h5\">the selected employee work during below holidays:</Typography>\r\n                    <Divider/>\r\n                    <EmployeeHolidaysCalender isMultiple={false} employeeHolidays={rowData.employeeHolidays} />\r\n                  </Grid>\r\n                </Grid>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      )}\r\n      <ErrorDialog\r\n        open={isErrorDialogOpen}\r\n        onClose={() => {\r\n          setIsErrorDialogOpen(false);\r\n          dispatch(setError([]))\r\n        }}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        errors={errors_res}\r\n      /> \r\n      {createEmployeeOpen && (\r\n        <CreateemployeeBox\r\n          initEmployees={initEmployees}\r\n          open={createEmployeeOpen}\r\n          onClose={handleCreateEmployeeClose}\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ManageEmployees;","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageLeaves.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageDepartments.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageWorkreasons.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageJobs.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\ManageAdmins.js",["413"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\n\r\nimport CreateadminBox from \"../components/modals/CreateAdminBox\";\r\nimport { getAdmins, setError, updateAdmin, deleteAdmin } from \"../actions/adminsAction\";\r\nimport { AddBox } from \"@material-ui/icons\";\r\nimport {tableIcons} from \"../utils/tableIcons\"\r\nimport { Avatar, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Page from \"../components/Page\";\r\nimport ErrorDialog from \"../components/modals/ErrorDialog\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n    width: 140\r\n  },\r\n});\r\n\r\nconst ManageAdmins = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const {isLoading, errors: errors_res, user} = useSelector((state) => state.auth);\r\n  const [isErrorDialogOpen, setIsErrorDialogOpen] = useState(false);\r\n  const [adminRows, setAdminRows] = useState([]);\r\n  const [createAdminOpen, setCreateAdminOpen] = useState(false);\r\n  const [uploadedImageError, setUploadedImageError] = useState(\"\");\r\n\r\n  let imageToUpdate = null;\r\n\r\n  function setImageToUpdate(v) {\r\n    imageToUpdate = v;\r\n  }\r\n\r\n  function handleUploadFile(e) {\r\n    const uploadedFile = e.target.files[0];\r\n\r\n    const { type, size } = uploadedFile;\r\n    const fileExtension = type.split(\"/\").pop();\r\n    let flag = true;\r\n    switch (fileExtension) {\r\n        case \"png\":\r\n        case \"jpeg\":\r\n        case \"jpg\":\r\n        if (size > 20 * 1000 * 1000) {\r\n            setUploadedImageError(\r\n            \"the file size of type image should be maximum of 20MB\"\r\n            );\r\n            flag = false;\r\n            e.target.value = null;\r\n        }\r\n        break;\r\n        default:\r\n            setUploadedImageError(\r\n                \"file type should be image(png/jpg/jpeg)\"\r\n            );\r\n            flag = false;\r\n            e.target.value = null;\r\n    }\r\n    if (uploadedFile && flag) {\r\n        setUploadedImageError(\"\");\r\n        setImageToUpdate(uploadedFile);\r\n    }\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: \"FirstName\",\r\n      field: \"firstName\",\r\n      editable: \"onUpdate\",\r\n    },\r\n    {\r\n      title: \"LastName\",\r\n      field: \"lastName\",\r\n      editable: \"onUpdate\",\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      field: \"image\",\r\n      render: (rowData) => (\r\n        <Avatar\r\n          className={classes.media}\r\n          alt={rowData.firstName}\r\n          src={`${process.env.REACT_APP_BACKEND_BASEURL}images/${rowData.imageName}`}\r\n          aria-label=\"recipe\"\r\n        />\r\n      ),\r\n      editComponent: ({value}) => {\r\n        return (\r\n          <>\r\n            <input\r\n              id=\"upload-image-file\"\r\n              name=\"upload-image-file\"\r\n              type=\"file\"\r\n              onChange={(e) => handleUploadFile(e)}\r\n            />\r\n            <Typography color=\"error\">{uploadedImageError}</Typography>\r\n          </>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      field: \"email\",\r\n      editable: \"never\",\r\n    },\r\n  ];\r\n\r\n  async function initAdmins() {\r\n    getAdmins()\r\n      .then((admins) => {\r\n        console.log(\"admins\", admins);\r\n          const rows = admins\r\n            ? admins.map((admin) => {\r\n                return {\r\n                  id: admin.id,\r\n                  firstName: admin.firstName,\r\n                  lastName: admin.lastName,\r\n                  email: admin.email,\r\n                  imageName: admin.imageName,\r\n                };\r\n                })\r\n            : [];\r\n          setAdminRows(rows);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    initAdmins();\r\n  }, [isLoading]);\r\n\r\n  const handleCreateAdminOpen = () => {\r\n    setCreateAdminOpen(true);\r\n  };\r\n\r\n  const handleCreateAdminClose = () => {\r\n    setCreateAdminOpen(false);\r\n  };\r\n\r\n  const handleUpdateAdmin = async (newData) => {\r\n    if(!newData.firstName || !newData.lastName) {alert(\"first and lst name not null\")}\r\n    else {\r\n      console.log(\"newData\", newData);\r\n      const updateAdminPayload = {\r\n          id: newData.id,\r\n          firstName: newData.firstName,\r\n          lastName: newData.lastName,\r\n          image: imageToUpdate,\r\n      };\r\n\r\n      dispatch(updateAdmin({admin: updateAdminPayload, initAdmins}));\r\n    }\r\n      \r\n  };\r\n\r\n  const handleDeleteAdmin = async (oldData) => {\r\n    if(user.id !== oldData.id){\r\n      await deleteAdmin(oldData.id);\r\n      initAdmins();\r\n    } else alert (\"you are not allowed to delete yourself\")\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      {!createAdminOpen && (\r\n        <MaterialTable\r\n          icons={tableIcons}\r\n          title=\"Manage admins\"\r\n          columns={columns}\r\n          data={adminRows}\r\n          actions={\r\n            [\r\n              {\r\n                icon: () => <AddBox />,\r\n                tooltip: \"add new admin\",\r\n                position: \"toolbar\",\r\n                onClick: () => {\r\n                  handleCreateAdminOpen();\r\n                },\r\n              },\r\n            ]\r\n          }\r\n          editable={{\r\n            onRowUpdate: (newData) => handleUpdateAdmin(newData),\r\n            onRowDelete: (oldData) => handleDeleteAdmin(oldData),\r\n          }}\r\n          options={{\r\n            search: false,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            pageSizeOptions: [20, 50],\r\n            paging: false,\r\n            maxBodyHeight: \"70vh\",\r\n            minBodyHeight: \"70vh\",\r\n          }}\r\n        />\r\n      )}\r\n      <ErrorDialog\r\n        open={isErrorDialogOpen}\r\n        onClose={() => {\r\n          setIsErrorDialogOpen(false);\r\n          dispatch(setError([]))\r\n        }}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        errors={errors_res}\r\n      /> \r\n      {createAdminOpen && (\r\n        <CreateadminBox\r\n          initAdmins={initAdmins}\r\n          open={createAdminOpen}\r\n          onClose={handleCreateAdminClose}\r\n          aria-labelledby=\"create-user-modal\"\r\n          aria-describedby=\"create-user-modal\"\r\n        />\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ManageAdmins;","C:\\Users\\user\\hr-frontend\\src\\pages\\ManageLeavereasons.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\UnauthorizedPage.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\employeeHolidaysAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\workreasonsAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\holidaysAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\employeesAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\jobsAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\departmentsAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\leavereasonsAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\actions\\adminsAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\Page.js",["414","415"],"import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport MiniDrawer from './Drawer';\r\nimport company from \"../utils/company.jpg\" \r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor:\"#b3c2d1\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Page = ({children}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n       <MiniDrawer>{children}</MiniDrawer>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","C:\\Users\\user\\hr-frontend\\src\\components\\EmployeeHolidaysCalender.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\LeavesCalender.js",[],"C:\\Users\\user\\hr-frontend\\src\\utils\\tableIcons.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\modals\\CreateAdminBox.js",["416"],"import React, { memo, useState } from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { createAdmin, setError } from \"../../actions/adminsAction\";\r\nimport { CardContent } from \"@material-ui/core\";\r\nimport AdminForm from \"../forms/AdminForm\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    buttons: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CreateAdminBox = memo(({ initAdmins, open, onClose }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    image: null,\r\n\temail: \"\",\r\n\tpassword: \"\",\r\n    cPassword: \"\",\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const handleFormClose = () => {\r\n    setState(initialState);\r\n    //empty errors\r\n    dispatch(setError([]));\r\n    onClose();\r\n  };\r\n\r\n  const saveClickHandler = async () => {\r\n    if(state.password.length < 8) {alert(\"Password 8 characters\")}\r\n    else {\r\n      if(state.cPassword.length < 8 || state.cPassword.localeCompare(state.password) !== 0 ) {\r\n        alert(\"Confirm password 8 characters and match password \")\r\n      } else {\r\n        const payload = {\r\n          firstName: state.firstName,\r\n          lastName: state.lastName,\r\n          image: state.image,\r\n          email: state.email,\r\n          password: state.password,\r\n          cPassword: state.cPassword,\r\n        };\r\n        //handleFormClose();\r\n        dispatch(createAdmin({admin: payload, initAdmins}));\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {open && (\r\n        <CardContent>\r\n          <div className={classes.root}>\r\n            <h2 id=\"simple-modal-title\">\r\n                Add Admin\r\n            </h2>\r\n            <form onSubmit={handleSubmit(saveClickHandler)}>\r\n              <AdminForm\r\n                  register={register}\r\n                  errors={errors}\r\n                  state={state}\r\n                  setState={setState}\r\n              />\r\n              <div className={classes.buttons}>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\r\n                  Save\r\n              </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={handleFormClose}>\r\n              Close\r\n          </Button>\r\n        </CardContent>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CreateAdminBox;","C:\\Users\\user\\hr-frontend\\src\\components\\modals\\CreateEmployeeBox.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\modals\\ErrorDialog.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\Profile\\index.js",["417","418"],"import React, {useEffect, useState} from 'react';\r\nimport { Divider, Grid } from '@material-ui/core';\r\nimport Page from '../../components/Page';\r\nimport {setUpdateProfileError, startUpdateEmployeeProfile} from '../../actions/loginAction';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useForm } from 'react-hook-form';\r\nimport UpdateEmployeeProfileForm from './UpdateEmployeeProfileForm';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { getEmployee } from '../../actions/employeesAction';\r\nimport { LeavesCalender } from '../../components/LeavesCalender';\r\nimport { EmployeeHolidaysCalender } from '../../components/EmployeeHolidaysCalender';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 400,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n);\r\n\r\nconst EmployeeProfile = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const {isLoading, user} = useSelector((state) => state.auth);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const initialState = {\r\n    id: user.id,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    image: null,\r\n    phoneNumber: \"\",\r\n  };\r\n  \r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  async function initEmployee() {\r\n    getEmployee(user.id)\r\n      .then((employeeRes) => {\r\n        setState({ \r\n          ...state, \r\n          firstName : employeeRes.firstName,\r\n          lastName : employeeRes.lastName,\r\n          phoneNumber : employeeRes.phoneNumber\r\n        });\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    initEmployee();\r\n  }, [isLoading]);\r\n\r\n  const handleFormClose = () => {\r\n    //empty errors\r\n    dispatch(setUpdateProfileError([]));\r\n  };\r\n\r\n  const saveClickHandler = async () => {\r\n    console.log(\"statestarte\", state)\r\n    const payload = {\r\n        id: state.id,\r\n        firstName: state.firstName,\r\n        lastName: state.lastName,\r\n        image: state.image,\r\n        phoneNumber: state.phoneNumber,\r\n    };\r\n    handleFormClose();\r\n    dispatch(startUpdateEmployeeProfile({employeeProfile: payload}));\r\n    \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Page>\r\n      <div style={{ marginTop: 20, padding: 30, marginLeft: 500 }}>\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n              title={`${user.firstName} ${user.lastName}`}\r\n              subheader={`${user.email}`}\r\n          />\r\n          <CardMedia\r\n              className={classes.media}\r\n              image={`${process.env.REACT_APP_BACKEND_BASEURL}images/${user.imageName}`}\r\n              title={`${user.firstName}`}\r\n          />\r\n          {user.userType.localeCompare(\"EMPLOYEE\") === 0 && (\"phoneNumber\" in user) &&(\r\n            <>\r\n              <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Phone Number: {user.phoneNumber}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Commission: {user.commission}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Salary: {user.salary}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Hire Date: {user.hireDate}\r\n                  </Typography>\r\n                  {user.isResigned && (\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      Resignation Date: {user.resignationDate}\r\n                    </Typography>\r\n                  )}\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Job: {user.job.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    Department: {user.department.name}\r\n                  </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <IconButton\r\n                  className={clsx(classes.expand, {\r\n                      [classes.expandOpen]: expanded,\r\n                  })}\r\n                  onClick={handleExpandClick}\r\n                  aria-expanded={expanded}\r\n                  aria-label=\"Edit Profile\"\r\n                >\r\n                    <EditIcon />\r\n                </IconButton>\r\n              </CardActions>\r\n            </>\r\n          )}\r\n          <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <form onSubmit={handleSubmit(saveClickHandler)}>\r\n                <CardHeader title=\"Edit Profile\" />\r\n                <CardContent>\r\n                  <Grid\r\n                      container\r\n                      justify=\"space-evenly\"\r\n                      alignItems=\"center\"\r\n                  >\r\n                  <UpdateEmployeeProfileForm\r\n                      register={register}\r\n                      errors={errors}\r\n                      state={state}\r\n                      setState={setState}\r\n                  />\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                      variant=\"contained\"\r\n                      size=\"large\"\r\n                      color=\"secondary\"\r\n                      type=\"submit\"\r\n                  >\r\n                      Update\r\n                  </Button>\r\n                </CardActions>\r\n              </form>\r\n            </CardContent>\r\n          </Collapse>\r\n      </Card>\r\n      </div>\r\n      <div style={{ marginTop: 20, padding: 30, marginLeft: 300 }}>\r\n        {user.userType.localeCompare(\"EMPLOYEE\") === 0 && (\"phoneNumber\" in user) &&(\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid>\r\n              <Typography variant=\"h5\">Your leaves:</Typography>\r\n              <Divider/>\r\n              <LeavesCalender isMultiple={false} leaves={user.leaves} />\r\n            </Grid>\r\n            <Grid>\r\n              <Typography variant=\"h5\">You work during below holidays:</Typography>\r\n              <Divider/>\r\n              <EmployeeHolidaysCalender isMultiple={false} employeeHolidays={user.employeeHolidays} />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </div>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default EmployeeProfile;\r\n","C:\\Users\\user\\hr-frontend\\src\\actions\\leavesAction.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\Drawer.js",["419"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport FlightTakeoffIcon from '@material-ui/icons/FlightTakeoff';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../actions/logoutAction';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      backgroundColor: \"#6199d3\",\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      backgroundColor:\"#b3c2d1\",\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    linkText: {\r\n      textDecoration: `none`,\r\n      textTransform: `uppercase`,\r\n      color: `black`\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function MiniDrawer({children}) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const {isAuthenticated, user} = useSelector((state) => state.auth);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  console.log(\"userType\", user.userType);\r\n\r\n  const adminNavLinks = [\r\n    { title: `admins`, path: `/manage-admins`, Icon: <SupervisorAccountIcon/> },\r\n    { title: `employees`, path: `/manage-employees`, Icon: <PeopleOutlineIcon/> },\r\n    { title: `departments`, path: `/manage-departments`, Icon: <BusinessIcon/> },\r\n    { title: `jobs`, path: `/manage-jobs`, Icon: <WorkIcon/> },\r\n    { title: `holidays`, path: `/manage-holidays`, Icon: <FlightTakeoffIcon/> },\r\n    { title: `leave reasons`, path: `/manage-leavereasons`, Icon: <DescriptionIcon/> },\r\n    { title: `work reasons`, path: `/manage-workreasons`, Icon: <DescriptionIcon/> },\r\n    { title: `leaves`, path: `/manage-leaves`, Icon: <HomeIcon/> },\r\n    { title: `holidays work`, path: `/manage-holidays-work`, Icon: <ScheduleIcon/> }\r\n  ];\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap style={{paddingLeft: '40vw'}}>\r\n            WAYVZ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {user.userType === \"ADMIN\" && isAuthenticated &&\r\n            adminNavLinks.map(({ title, path, Icon }) => (\r\n              <Link to={path} className={classes.linkText} key={title}>\r\n                <ListItem title={title} button selected={path.localeCompare(history.location.pathname) === 0}>\r\n                  <ListItemIcon>{Icon}</ListItemIcon>\r\n                  <ListItemText primary={title} />\r\n                </ListItem>\r\n              </Link>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {isAuthenticated ? (\r\n            <>    \r\n              <Link to={\"/\"} className={classes.linkText}>\r\n                <ListItem title=\"Home\" button selected={\"/\".localeCompare(history.location.pathname) === 0}>\r\n                  <ListItemIcon>Home</ListItemIcon>\r\n                  <ListItemText primary={\"home\"} />\r\n                </ListItem>\r\n              </Link>            \r\n              <Link to={\"/profile\"} className={classes.linkText}>\r\n                <ListItem title=\"Profile\" button selected={\"/profile\".localeCompare(history.location.pathname) === 0}>\r\n                  <ListItemIcon><AccountBoxIcon /></ListItemIcon>\r\n                  <ListItemText primary={\"my profile\"} />\r\n                </ListItem>\r\n              </Link>\r\n              \r\n              <ListItem title=\"Logout\" button>\r\n                <ListItemIcon><ExitToAppIcon onClick={() => {dispatch(startLogout())}} /></ListItemIcon>\r\n                <ListItemText primary=\"logout\" />\r\n              </ListItem>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {history.location.pathname !== '/login' &&\r\n                (\r\n                  <Link to={\"/login\"} className={classes.linkText}>\r\n                    <ListItem title=\"login\" button>\r\n                        <ListItemIcon><VpnKeyIcon /></ListItemIcon>\r\n                        <ListItemText primary=\"login\" />\r\n                    </ListItem>\r\n                  </Link>\r\n                )\r\n              }\r\n            </>\r\n            ) \r\n          }\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n            {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n",["420","421"],"C:\\Users\\user\\hr-frontend\\src\\components\\forms\\EmployeeForm.js",[],"C:\\Users\\user\\hr-frontend\\src\\components\\forms\\AdminForm.js",[],"C:\\Users\\user\\hr-frontend\\src\\pages\\Profile\\UpdateEmployeeProfileForm.js",[],{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":1,"column":23,"nodeType":"428","messageId":"429","endLine":1,"endColumn":31},{"ruleId":"422","replacedBy":"430"},{"ruleId":"424","replacedBy":"431"},{"ruleId":"426","severity":1,"message":"427","line":1,"column":23,"nodeType":"428","messageId":"429","endLine":1,"endColumn":31},{"ruleId":"426","severity":1,"message":"427","line":1,"column":23,"nodeType":"428","messageId":"429","endLine":1,"endColumn":31},{"ruleId":"426","severity":1,"message":"427","line":1,"column":23,"nodeType":"428","messageId":"429","endLine":1,"endColumn":31},{"ruleId":"426","severity":1,"message":"427","line":1,"column":23,"nodeType":"428","messageId":"429","endLine":1,"endColumn":31},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"422","replacedBy":"432"},{"ruleId":"424","replacedBy":"433"},{"ruleId":"426","severity":1,"message":"434","line":3,"column":25,"nodeType":"428","messageId":"429","endLine":3,"endColumn":31},{"ruleId":"426","severity":1,"message":"434","line":3,"column":25,"nodeType":"428","messageId":"429","endLine":3,"endColumn":31},{"ruleId":"426","severity":1,"message":"435","line":2,"column":36,"nodeType":"428","messageId":"429","endLine":2,"endColumn":41},{"ruleId":"426","severity":1,"message":"436","line":4,"column":8,"nodeType":"428","messageId":"429","endLine":4,"endColumn":15},{"ruleId":"426","severity":1,"message":"435","line":2,"column":36,"nodeType":"428","messageId":"429","endLine":2,"endColumn":41},{"ruleId":"426","severity":1,"message":"435","line":9,"column":22,"nodeType":"428","messageId":"429","endLine":9,"endColumn":27},{"ruleId":"437","severity":1,"message":"438","line":81,"column":6,"nodeType":"439","endLine":81,"endColumn":17,"suggestions":"440"},{"ruleId":"426","severity":1,"message":"435","line":3,"column":46,"nodeType":"428","messageId":"429","endLine":3,"endColumn":51},{"ruleId":"422","replacedBy":"441"},{"ruleId":"424","replacedBy":"442"},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["443"],["444"],["443"],["444"],"'Column' is defined but never used.","'Theme' is defined but never used.","'company' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initEmployee'. Either include it or remove the dependency array.","ArrayExpression",["445"],["443"],["444"],"no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},"Update the dependencies array to be: [initEmployee, isLoading]",{"range":"448","text":"449"},[2623,2634],"[initEmployee, isLoading]"]